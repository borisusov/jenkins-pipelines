pipeline {
    agent any;
    

    tools {
        maven 'mvn_3.6.3' 
    }
    
    stages {
        stage('Maven Build') {
            steps { 
                sh "env | sort"
                rtMavenResolver (
                        id: 'my-resolver',
                        serverId: 'jfrog',
                        releaseRepo: 'default.maven.virtual',
                        snapshotRepo: 'default.maven.virtual'
                 )


                rtMavenDeployer (
                    id: 'my-deployer',
                    serverId: 'jfrog',
                    releaseRepo: 'release.maven.local',
                    snapshotRepo: 'snapshot.maven.local',
                    // By default, 3 threads are used to upload the artifacts to Artifactory. You can override this default by setting:
                    threads: 4,
                    // Attach custom properties to the published artifacts:
                    //properties: ['key1=value1', 'key2=value2']
                )
                rtMavenRun (
                    // Tool name from Jenkins configuration.
                    tool: 'mvn_3.6.3',
                    pom: 'pom.xml',
                    goals: 'clean install',
                    // Maven options.
                    opts: '-Xms1024m -Xmx4096m',
                    resolverId: 'my-resolver',
                    deployerId: 'my-deployer',
                    
                    buildName: 'HelloWorld',
                    buildNumber: BUILD_NUMBER
                )

            }



          //  post {
          //      success {
          //          archiveArtifacts artifacts: 'target/*.war', fingerprint: true
          //      }
          //  }
        }
    }

    post {
        cleanup {
            cleanWs ()
        }
    }
}